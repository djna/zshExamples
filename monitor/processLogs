#!/bin/zsh

# Process logs
#
# Summarise statistics for current set of logs in input directory 
# Write report to a file in reports directory
#
# Move any defective files to badFiles directory
#
# Move successfully processed files to processedFiles directory
#



export INPUT_DIR=data/input
export BAD_DIR=data/badFiles
export GOOD_DIR=data/processedFiles

export REPORT_FILE=data/reports/branchReport.$(date +%s).txt


# tolerate empty input dir
theList=($INPUT_DIR/*(N))

typeset -i badCount=0
typeset -i fileCount=0
typeset -A branchTotals 

# check whether $1 is an integer
function intCheck() {
    
    typeset -i branchCount
    # attemot assignment, discard eeor message, if success will echo value
    check=$(branchCount="$1" && echo "$branchCount" ) 2>/dev/null
    
    # if we got a non null valuem assignment worked
    if  [[ -n "$check" ]]; then 
        return 0
    else
        return 1
    fi
}

for logFile in $theList; do
    ((fileCount++))
    local IFS=,
    read branch count < $logFile
    # echo "$logFile :$branch: :$count:"
    if [ -z "$branch" ] || [ -z "$count" ]; then
        echo "Invalid record in $logFile" >&2
        mv $logFile $BAD_DIR
        ((badCount++))
    
    elif intCheck "$count"; then
        #echo "$branch has $count"

        currentTotal="${branchTotals[$branch]:=0}"
        #echo "Current $currentTotal"
        (( currentTotal += count ))
        branchTotals[$branch]=$currentTotal

        mv $logFile $GOOD_DIR
    else 
        echo "Invalid count in $logFile" >&2
        mv $logFile $BAD_DIR
        ((badCount++))
    fi
 
done

echo "Processed $fileCount files, $badCount were bad"  >$REPORT_FILE

for branch total in ${(kv)branchTotals}; do
    echo "$branch=$total"
done >>$REPORT_FILE

echo "Created report $REPORT_FILE for $#branchTotals branches"



